{"version":3,"sources":["Transitions/Filter-pop.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","Transitions/Slide.module.css","components/App/App.module.css","components/Message/Message.module.css","Transitions/Logo-slide.module.css","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/Logo/Logo.jsx","components/Message/Message.jsx","components/App/App.jsx","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onAddContact","clearState","this","className","styles","onSubmit","htmlFor","label","id","input1","type","onChange","pattern","input2","button","Component","Filter","onChangeFilter","filter","ContactList","contacts","onDeleteContact","TransitionGroup","component","list","map","CSSTransition","key","timeout","unmountOnExit","classNames","slideTransition","onClick","Logo","Message","container","App","didMount","contactExists","filterContacts","contact","toLowerCase","includes","changeFilter","isAlreadyAdded","find","item","addContact","contactToAdd","uuid","prevState","setTimeout","deleteContact","JSON","parse","localStorage","getItem","setItem","stringify","filteredContacts","app","in","LogoSlideTransition","appear","length","FilterTransition","PopTransition","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75e6ffce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Filter-pop_enter__14rMC\",\"enterActive\":\"Filter-pop_enterActive__1_liF\",\"exit\":\"Filter-pop_exit__2s2cg\",\"exitActive\":\"Filter-pop_exitActive__3pprX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactList_button__1RuFy\",\"list\":\"ContactList_list__2T7aG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Slide_enter__bPpln\",\"enterActive\":\"Slide_enterActive__2fBoN\",\"exit\":\"Slide_exit__cINaf\",\"exitActive\":\"Slide_exitActive__3qo3z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1IksY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Message_container__1oZBM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Logo-slide_enter__1pBFb\",\"enterActive\":\"Logo-slide_enterActive__2a8h-\",\"exit\":\"Logo-slide_exit__3-q3n\",\"exitActive\":\"Logo-slide_exitActive__1kNiH\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from \"./ContactForm.module.css\";\n\nexport default class ContactForm extends Component {\n\n    static propTypes = {\n        onAddContact: PropTypes.func.isRequired,\n    }\n\n    state = {\n        name: '',\n        number: ''\n    }\n\n    handleChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        if (this.state.name && this.state.number) {\n            this.props.onAddContact({ ...this.state})\n        }\n        this.clearState();\n    };\n\n    clearState = () => {\n        this.setState({\n            name: '',\n            number: '',\n        });\n    };\n\n    render() {\n        const { name, number } = this.state;\n        return (\n        <form className={styles.ContactForm} onSubmit={this.handleSubmit}>\n              <label htmlFor=\"name\" className={styles.label}>\n                Name\n                <input\n                  id=\"name\"\n                  className={styles.input1}\n                  type=\"text\"\n                  name=\"name\"\n                  value={name}\n                  onChange={this.handleChange}\n                />\n              </label>\n              <label htmlFor=\"number\">\n                Number\n                <input\n                  pattern=\"[0-9]+$\"\n                  id=\"number\"\n                  className={styles.input2}\n                  type=\"text\"\n                  name=\"number\"\n                  value={number}\n                  onChange={this.handleChange}\n                />\n              </label>\n              <button className={styles.button} type=\"submit\">Add Contact</button>\n        </form>\n      );\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nconst Filter = ( { onChangeFilter }) => {\n\n    return (\n            <>\n            <label htmlFor=\"filter\">\n            Find contacts by name\n            <input\n                id=\"filter\"\n                className={styles.filter}\n                type=\"text\"\n                name=\"filter\"\n                onChange={onChangeFilter}\n            />\n           </label>\n           </>\n    );\n}\n\n\nFilter.propTypes = {\n    onChangeFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport slideTransition from \"../../Transitions/Slide.module.css\";\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n    return (\n         <TransitionGroup\n           component=\"ul\"\n           className={styles.list}>\n            {contacts.map(({id, name, number}) => (\n            <CSSTransition\n              key={id}\n              timeout={250}\n              unmountOnExit\n              classNames={slideTransition}>\n            <li key={id}>\n              <button\n                className={styles.button}\n                type='button'\n                onClick={() => onDeleteContact(id)}\n              >Delete</button>\n              {name}: {number}\n            </li>\n            </CSSTransition>\n            ))}\n        </TransitionGroup>\n    );\n}\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      }),\n    ).isRequired,\n    onDeleteContact: PropTypes.func.isRequired,\n  };\n  export default ContactList;","import React from 'react';\n\n\nconst Logo = () => {\n  return (\n      <h1>Phonebook</h1>\n  );\n};\n\nexport default Logo;","import React from 'react';\nimport styles from './Message.module.css';\n\nconst Message = () => {\n  return (\n    <div className={styles.container}>\n      <p>Contact already exists!</p>\n    </div>\n  );\n};\n\nexport default Message;","import React, { Component } from 'react';\nimport uuid from \"uuid\";\nimport { CSSTransition } from \"react-transition-group\";\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport Filter from \"../Filter/Filter\";\nimport ContactList from \"../ContactList/ContactList\";\nimport styles from \"./App.module.css\";\nimport Logo from \"../Logo/Logo\";\nimport Message from \"../Message/Message\";\nimport PopTransition from \"../../Transitions/Filter-pop.module.css\"\nimport FilterTransition from \"../../Transitions/Filter-pop.module.css\"\nimport LogoSlideTransition from \"../../Transitions/Logo-slide.module.css\";\n\n\n\n\nexport default class App extends Component {\n    state = {\n      contacts: [\n        {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n        {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n        {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n        {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n      ],\n      filter: '',\n      didMount: false,\n      contactExists: false,\n    };\n\n    filterContacts = (contacts, filter) => {\n        return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(filter.toLowerCase()),\n        );\n    };\n\n    changeFilter = e => {\n        this.setState( { filter: e.target.value });\n    };\n\n    isAlreadyAdded = (contact, contacts) =>\n       contacts.find(item =>\n        item.name.toLowerCase().includes(contact.name.toLowerCase()),\n    );\n\n    addContact = contact => {\n        const { contacts } = this.state;\n\n        const contactToAdd = {\n            ...contact,\n            id: uuid(),\n        };\n\n        !this.isAlreadyAdded(contact, contacts) ?\n\n        this.setState(state => ({\n            contacts: [...state.contacts, contactToAdd],\n        })) :\n        this.setState(\n            prevState => ({ contactExists: !prevState.contactExists }),\n            () =>\n              setTimeout(() => {\n                this.setState(prevState => ({\n                  contactExists: !prevState.contactExists,\n                }));\n              }, 1000),\n          );\n    };\n\n    deleteContact = id => {\n        this.setState(state => ({\n            contacts: state.contacts.filter(contact => contact.id !== id),\n        }));\n    };\n\n    componentDidMount() {\n        this.setState({ didMount: true });\n        const contacts = JSON.parse(localStorage.getItem(\"contacts\")) || this.state.contacts;\n        this.setState(state => ({\n            contacts\n        }));\n    }\n    componentDidUpdate(prevState) {\n        const { contacts} = this.state;\n        if (contacts !== prevState.contacts) {\n            localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n        }\n    }\n\n    render() {\n        const {  filter, contacts, didMount, contactExists } = this.state;\n        const filteredContacts = this.filterContacts(contacts, filter);\n\n        return (\n\n            <div className={styles.app}>\n            <CSSTransition\n              in={didMount}\n              timeout={500}\n              classNames={LogoSlideTransition}\n              appear\n            >\n              <Logo />\n            </CSSTransition>\n            <ContactForm onAddContact={this.addContact}/>\n            {contacts.length > 0 && (\n            <>\n            <h2>Contacts</h2>\n            <CSSTransition\n              in={contacts.length > 1}\n              timeout={250}\n              classNames={FilterTransition}\n              unmountOnExit\n            >\n              <Filter\n              onChangeFilter={this.changeFilter}\n              />\n            </CSSTransition>\n            <ContactList\n              contacts={filteredContacts}\n              onDeleteContact={this.deleteContact}/>\n            </>\n            )}\n            <CSSTransition\n              in={contactExists}\n              timeout={250}\n              classNames={PopTransition}\n              unmountOnExit\n            >\n              <Message />\n            </CSSTransition>\n          </div>\n        );\n    }\n};","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__1zvAA\",\"label\":\"ContactForm_label__378f8\",\"button\":\"ContactForm_button__1MLZK\",\"input1\":\"ContactForm_input1__2gn4K\",\"input2\":\"ContactForm_input2__-FHK5\"};"],"sourceRoot":""}